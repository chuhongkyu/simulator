/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 car.glb -t 
*/

import * as THREE from 'three'
import React, { useEffect } from 'react'
import { ContactShadows, useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_445: THREE.Mesh
    Object_448: THREE.Mesh
    Object_243: THREE.Mesh
    Object_246: THREE.Mesh
    Object_258: THREE.Mesh
    Object_267: THREE.Mesh
    Object_264: THREE.Mesh
    Object_261: THREE.Mesh
    Object_276: THREE.Mesh
    Object_253: THREE.Mesh
    Object_249: THREE.Mesh
    Object_251: THREE.Mesh
    Object_255: THREE.Mesh
    Object_273: THREE.Mesh
    Object_270: THREE.Mesh
    Object_279: THREE.Mesh
    Object_410: THREE.Mesh
    Object_416: THREE.Mesh
    Object_413: THREE.Mesh
    Object_407: THREE.Mesh
    Object_422: THREE.Mesh
    Object_419: THREE.Mesh
    Object_425: THREE.Mesh
    Object_428: THREE.Mesh
    Object_438: THREE.Mesh
    Object_432: THREE.Mesh
    Object_435: THREE.Mesh
    Object_441: THREE.Mesh
    Object_175: THREE.Mesh
    Object_160: THREE.Mesh
    Object_110: THREE.Mesh
    Object_125: THREE.Mesh
    Object_196: THREE.Mesh
    Object_199: THREE.Mesh
    Object_202: THREE.Mesh
    Object_205: THREE.Mesh
    Object_208: THREE.Mesh
    Object_128: THREE.Mesh
    Object_137: THREE.Mesh
    Object_193: THREE.Mesh
    Object_211: THREE.Mesh
    Object_148: THREE.Mesh
    Object_151: THREE.Mesh
    Object_145: THREE.Mesh
    Object_214: THREE.Mesh
    Object_178: THREE.Mesh
    Object_116: THREE.Mesh
    Object_119: THREE.Mesh
    Object_154: THREE.Mesh
    Object_157: THREE.Mesh
    Object_163: THREE.Mesh
    Object_166: THREE.Mesh
    Object_113: THREE.Mesh
    Object_225: THREE.Mesh
    Object_234: THREE.Mesh
    Object_134: THREE.Mesh
    Object_122: THREE.Mesh
    Object_187: THREE.Mesh
    Object_190: THREE.Mesh
    Object_181: THREE.Mesh
    Object_131: THREE.Mesh
    Object_231: THREE.Mesh
    Object_228: THREE.Mesh
    Object_217: THREE.Mesh
    Object_219: THREE.Mesh
    Object_140: THREE.Mesh
    Object_142: THREE.Mesh
    Object_222: THREE.Mesh
    Object_172: THREE.Mesh
    Object_169: THREE.Mesh
    Object_184: THREE.Mesh
    Object_63: THREE.Mesh
    Object_60: THREE.Mesh
    Object_95: THREE.Mesh
    Object_66: THREE.Mesh
    Object_75: THREE.Mesh
    Object_69: THREE.Mesh
    Object_72: THREE.Mesh
    Object_57: THREE.Mesh
    Object_92: THREE.Mesh
    Object_89: THREE.Mesh
    Object_81: THREE.Mesh
    Object_78: THREE.Mesh
    Object_86: THREE.Mesh
    Object_84: THREE.Mesh
    Object_101: THREE.Mesh
    Object_98: THREE.Mesh
    Object_104: THREE.Mesh
    Object_107: THREE.Mesh
    Object_51: THREE.Mesh
    Object_54: THREE.Mesh
    Object_42: THREE.Mesh
    Object_237: THREE.Mesh
    Object_239: THREE.Mesh
    Object_48: THREE.Mesh
    Object_45: THREE.Mesh
    Object_295: THREE.Mesh
    Object_299: THREE.Mesh
    Object_301: THREE.Mesh
    Object_297: THREE.Mesh
    Object_303: THREE.Mesh
    Object_283: THREE.Mesh
    Object_305: THREE.Mesh
    Object_289: THREE.Mesh
    Object_287: THREE.Mesh
    Object_312: THREE.Mesh
    Object_293: THREE.Mesh
    Object_309: THREE.Mesh
    Object_307: THREE.Mesh
    Object_291: THREE.Mesh
    Object_285: THREE.Mesh
    Object_330: THREE.Mesh
    Object_332: THREE.Mesh
    Object_334: THREE.Mesh
    Object_316: THREE.Mesh
    Object_324: THREE.Mesh
    Object_322: THREE.Mesh
    Object_341: THREE.Mesh
    Object_328: THREE.Mesh
    Object_338: THREE.Mesh
    Object_320: THREE.Mesh
    Object_336: THREE.Mesh
    Object_326: THREE.Mesh
    Object_318: THREE.Mesh
    Object_357: THREE.Mesh
    Object_361: THREE.Mesh
    Object_359: THREE.Mesh
    Object_363: THREE.Mesh
    Object_345: THREE.Mesh
    Object_365: THREE.Mesh
    Object_351: THREE.Mesh
    Object_349: THREE.Mesh
    Object_372: THREE.Mesh
    Object_355: THREE.Mesh
    Object_369: THREE.Mesh
    Object_367: THREE.Mesh
    Object_353: THREE.Mesh
    Object_347: THREE.Mesh
    Object_388: THREE.Mesh
    Object_390: THREE.Mesh
    Object_392: THREE.Mesh
    Object_376: THREE.Mesh
    Object_382: THREE.Mesh
    Object_380: THREE.Mesh
    Object_399: THREE.Mesh
    Object_386: THREE.Mesh
    Object_396: THREE.Mesh
    Object_394: THREE.Mesh
    Object_384: THREE.Mesh
    Object_378: THREE.Mesh
    Object_403: THREE.Mesh
    Object_26: THREE.Mesh
    Object_30: THREE.Mesh
    Object_12: THREE.Mesh
    Object_20: THREE.Mesh
    Object_22: THREE.Mesh
    Object_9: THREE.Mesh
    Object_15: THREE.Mesh
    Object_17: THREE.Mesh
    Object_38: THREE.Mesh
    Object_36: THREE.Mesh
    Object_34: THREE.Mesh
    Object_473: THREE.Mesh
    Object_469: THREE.Mesh
    Object_471: THREE.Mesh
    Object_467: THREE.Mesh
    Object_475: THREE.Mesh
    Object_477: THREE.Mesh
    Object_479: THREE.Mesh
    Object_458: THREE.Mesh
    Object_454: THREE.Mesh
    Object_456: THREE.Mesh
    Object_452: THREE.Mesh
    Object_460: THREE.Mesh
    Object_462: THREE.Mesh
    Object_464: THREE.Mesh
  }
  materials: {
    primary: THREE.MeshStandardMaterial
    ['movsteer_1.0.1']: THREE.MeshStandardMaterial
    ['black_lights.0']: THREE.MeshStandardMaterial
    ['back_chrome_light.0']: THREE.MeshStandardMaterial
    indicator_lr: THREE.MeshStandardMaterial
    indicator_rr: THREE.MeshStandardMaterial
    revlight_L: THREE.MeshStandardMaterial
    ['hitam.0']: THREE.MeshStandardMaterial
    ['JUST_BLACK.0']: THREE.MeshStandardMaterial
    ['platnomor.1']: THREE.MeshStandardMaterial
    ['platnomor.2']: THREE.MeshStandardMaterial
    left_rear_light: THREE.MeshStandardMaterial
    right_rear_light: THREE.MeshStandardMaterial
    ['tembus_red.0']: THREE.MeshStandardMaterial
    foglight_l: THREE.MeshStandardMaterial
    foglight_r: THREE.MeshStandardMaterial
    ['front_black.0']: THREE.MeshStandardMaterial
    indicator_lf: THREE.MeshStandardMaterial
    indicator_rf: THREE.MeshStandardMaterial
    ['light_pantulan.0']: THREE.MeshStandardMaterial
    ['aluminium2.0']: THREE.MeshStandardMaterial
    ['dvorright.0']: THREE.MeshStandardMaterial
    ['belt.0']: THREE.MeshStandardMaterial
    ['Plastic.0']: THREE.MeshStandardMaterial
    ['Carpet.0']: THREE.MeshStandardMaterial
    ['Carpet_Light.0']: THREE.MeshStandardMaterial
    ['LCDs.0']: THREE.MeshStandardMaterial
    ['mirror_inside.0']: THREE.MeshStandardMaterial
    ['Putih.0']: THREE.MeshStandardMaterial
    ['satin_red.0']: THREE.MeshStandardMaterial
    ['Seat_Leather_white.0']: THREE.MeshStandardMaterial
    ['suspensi.0']: THREE.MeshStandardMaterial
    ['suspensi.1']: THREE.MeshStandardMaterial
    ['texture_Buttons.0']: THREE.MeshStandardMaterial
    ['movsteer_1.0.0']: THREE.MeshStandardMaterial
    ['aluminium_light.0']: THREE.MeshStandardMaterial
    breaklight_l: THREE.MeshStandardMaterial
    ['pantulans.0']: THREE.MeshStandardMaterial
    left_front_light: THREE.MeshStandardMaterial
    right_front_light: THREE.MeshStandardMaterial
    light_night: THREE.MeshStandardMaterial
    ['primary.001']: THREE.MeshStandardMaterial
    ['chassis.0']: THREE.MeshStandardMaterial
    ['glass.0']: THREE.MeshStandardMaterial
    ['glass.1']: THREE.MeshStandardMaterial
    ['door_lf.0']: THREE.MeshStandardMaterial
    ['door_lf.5']: THREE.MeshStandardMaterial
    ['primary.002']: THREE.MeshStandardMaterial
    ['primary.004']: THREE.MeshStandardMaterial
    ['hub_rb.0']: THREE.MeshStandardMaterial
    ['hub_rf.0']: THREE.MeshStandardMaterial
    ['hub_rf.1']: THREE.MeshStandardMaterial
    ['wheels.0']: THREE.MeshStandardMaterial
    ['wheels.1']: THREE.MeshStandardMaterial
    ['wheels.2']: THREE.MeshStandardMaterial
    ['wheels.3']: THREE.MeshStandardMaterial
    ['wheels.4']: THREE.MeshStandardMaterial
    ['wheels.6']: THREE.MeshStandardMaterial
  }
}

export function Car({renderOrder = 1}: {renderOrder?: number}) {
  const { nodes, materials, scene } = useGLTF('/assets/model/car.glb') as GLTFResult & { scene: THREE.Group }

  // useEffect(() => {
  //   scene.traverse((child) => {
  //     if ((child as THREE.Mesh).isMesh) {
  //       const mesh = child as THREE.Mesh
  //       if (Array.isArray(mesh.material)) {
  //         mesh.material.forEach((m) => {
  //           m.depthTest = false
  //         })
  //       } else {
  //         mesh.material.depthTest = false
  //       }
  //     }
  //   })
  // }, [scene])

  return (
    <group rotation={[0, 0, 0]} renderOrder={renderOrder}>
      <primitive object={scene} scale={0.5} />
    </group>
  )
}

useGLTF.preload('/assets/model/car.glb')
